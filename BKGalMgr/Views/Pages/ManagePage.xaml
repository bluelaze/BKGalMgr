<?xml version="1.0" encoding="utf-8" ?>
<Page
    x:Class="BKGalMgr.Views.Pages.ManagePage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:BKGalMgr.Views.Controls"
    xmlns:converters="using:BKGalMgr.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:interactions="using:Microsoft.Xaml.Interactions.Core"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:local="using:BKGalMgr.Views.Pages"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:mtriggers="using:CommunityToolkit.WinUI"
    xmlns:mui="using:CommunityToolkit.WinUI"
    xmlns:vm="using:BKGalMgr.ViewModels"
    mc:Ignorable="d">
    <Page.Resources>
        <converters:PlayedPeriodStringConverter x:Key="PlayedPeriodStringConverter" />
    </Page.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <StackPanel
            Margin="16,8"
            Orientation="Horizontal"
            Spacing="8">
            <ComboBox
                x:Uid="Manage_Repository_ComboBox"
                ItemsSource="{Binding ViewModel.Repository, Mode=OneWay}"
                SelectedItem="{Binding ViewModel.SelectedRepository, Mode=TwoWay}">
                <ComboBox.ContextFlyout>
                    <MenuFlyout>
                        <MenuFlyoutItem
                            x:Name="edit_repository_menuflyoutitem"
                            x:Uid="Commom_MenuItem_Edit"
                            Click="edit_repository_menuflyoutitem_Click" />
                        <MenuFlyoutItem x:Uid="Commom_MenuItem_Open_Folder" Command="{Binding ViewModel.SelectedRepository.OpenJsonFolderCommand}" />
                    </MenuFlyout>
                </ComboBox.ContextFlyout>
                <ComboBox.HeaderTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal" Spacing="8">
                            <TextBlock x:Uid="Manage_Repository" VerticalAlignment="Center" />
                            <Button
                                x:Name="add_repository_button"
                                Click="add_repository_button_Click"
                                Content="{mui:FontIcon FontSize=16,
                                                       Glyph=&#xE948;}" />
                        </StackPanel>
                    </DataTemplate>
                </ComboBox.HeaderTemplate>
                <ComboBox.ItemTemplate>
                    <DataTemplate x:DataType="vm:RepositoryInfo">
                        <StackPanel>
                            <TextBlock Text="{Binding Name}" />
                            <TextBlock Text="{Binding FolderPath}" />
                        </StackPanel>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>

            <ComboBox
                ItemsSource="{Binding ViewModel.SelectedRepository.Games, Mode=OneWay}"
                SelectedItem="{Binding ViewModel.SelectedRepository.SelectedGame, Mode=TwoWay}"
                Visibility="{Binding ViewModel.SelectedRepositoryIsValid, Mode=OneWay}">
                <ComboBox.ContextFlyout>
                    <MenuFlyout>
                        <MenuFlyoutItem x:Uid="Commom_MenuItem_Open_Folder" Command="{Binding ViewModel.SelectedRepository.SelectedGame.OpenJsonFolderCommand}" />
                    </MenuFlyout>
                </ComboBox.ContextFlyout>
                <ComboBox.HeaderTemplate>
                    <DataTemplate>
                        <UserControl>
                            <StackPanel Orientation="Horizontal" Spacing="8">
                                <TextBlock x:Uid="Manage_Game" VerticalAlignment="Center" />
                                <Button
                                    x:Name="add_game_button"
                                    Click="add_game_button_Click"
                                    Content="{mui:FontIcon FontSize=16,
                                                           Glyph=&#xE948;}" />
                                <Button
                                    x:Name="save_game_button"
                                    Command="{Binding ViewModel.SelectedRepository.SelectedGame.SaveGameInfoCommand}"
                                    Content="{mui:FontIcon FontSize=16,
                                                           Glyph=&#xE74E;}"
                                    IsEnabled="{Binding ViewModel.SelectedRepository.SelectedGame.IsValid}">
                                    <Button.Resources>
                                        <StaticResource x:Key="ButtonForegroundPointerOver" ResourceKey="SystemFillColorSuccessBrush" />
                                        <StaticResource x:Key="ButtonForegroundPressed" ResourceKey="SystemFillColorSuccessBrush" />
                                    </Button.Resources>
                                </Button>
                                <Button
                                    x:Name="delete_game_button"
                                    Click="delete_game_button_Click"
                                    Content="{mui:FontIcon FontSize=16,
                                                           Glyph=&#xE74D;}">
                                    <Button.Resources>
                                        <StaticResource x:Key="ButtonForegroundPointerOver" ResourceKey="SystemFillColorCriticalBrush" />
                                        <StaticResource x:Key="ButtonForegroundPressed" ResourceKey="SystemFillColorCriticalBrush" />
                                    </Button.Resources>
                                </Button>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup>
                                        <VisualState x:Name="GamePropertyChangedState">
                                            <VisualState.StateTriggers>
                                                <mtriggers:IsEqualStateTrigger Value="{Binding ViewModel.SelectedRepository.SelectedGame.IsPropertyChanged}" To="True" />
                                            </VisualState.StateTriggers>
                                            <VisualState.Setters>
                                                <Setter Target="save_game_button.Foreground" Value="{ThemeResource SystemFillColorSuccessBrush}" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </StackPanel>
                        </UserControl>
                    </DataTemplate>
                </ComboBox.HeaderTemplate>
                <ComboBox.ItemTemplate>
                    <DataTemplate x:DataType="vm:GameInfo">
                        <StackPanel>
                            <TextBlock Text="{Binding Name}" />
                            <SelectorBarItem
                                Padding="0"
                                Icon="{mui:FontIcon Glyph='&#xEC92;'}"
                                Text="{Binding CreateDate}" />
                        </StackPanel>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>

            <ComboBox ItemsSource="{Binding ViewModel.SelectedRepository.SelectedGame.PlayedPeriods, Mode=OneWay}" SelectedIndex="0">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Converter={StaticResource PlayedPeriodStringConverter}}" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
        </StackPanel>
        <Grid Grid.Row="1" Visibility="{Binding ViewModel.SelectedRepository.SelectedGameIsValid, Mode=OneWay, FallbackValue=Collapsed}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <controls:GameInfoControl DataContext="{Binding ViewModel.SelectedRepository.SelectedGame, Mode=OneWay}" />
            <Grid Grid.Row="1" Margin="0,8">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <ListView Padding="0" ItemsSource="{Binding ViewModel.SelectedRepository.SelectedGame.Sources, Mode=OneWay}">
                    <ListView.Header>
                        <StackPanel
                            Margin="16,0"
                            Orientation="Horizontal"
                            Spacing="8">
                            <TextBlock x:Uid="Manage_Sources" VerticalAlignment="Center" />
                            <Button
                                x:Name="add_source_folder_button"
                                x:Uid="Manage_Sources_Add"
                                Click="add_source_folder_button_Click"
                                Content="{mui:FontIcon FontSize=16,
                                                       Glyph=&#xE8F4;}"
                                IsEnabled="{Binding ViewModel.SelectedRepository.SelectedGame.IsValid, Mode=OneWay}" />
                        </StackPanel>
                    </ListView.Header>
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="vm:SourceInfo">
                            <StackPanel Style="{StaticResource ListViewStackItemStyle}">
                                <StackPanel.ContextFlyout>
                                    <MenuFlyout>
                                        <MenuFlyoutItem
                                            x:Name="edit_source_menuflyoutitem"
                                            x:Uid="Commom_MenuItem_Edit"
                                            Click="edit_source_menuflyoutitem_Click" />
                                        <MenuFlyoutItem x:Uid="Commom_MenuItem_Open_Folder" Command="{Binding OpenJsonFolderCommand}" />
                                        <MenuFlyoutSeparator />
                                        <MenuFlyoutItem
                                            x:Name="delete_source_menuflyoutitem"
                                            x:Uid="Commom_MenuItem_Delete"
                                            Click="delete_source_menuflyoutitem_Click">
                                            <MenuFlyoutItem.Resources>
                                                <StaticResource x:Key="MenuFlyoutItemForeground" ResourceKey="SystemFillColorCriticalBrush" />
                                                <StaticResource x:Key="MenuFlyoutItemForegroundPointerOver" ResourceKey="SystemFillColorCriticalBrush" />
                                                <StaticResource x:Key="MenuFlyoutItemForegroundPressed" ResourceKey="SystemFillColorCriticalBrush" />
                                            </MenuFlyoutItem.Resources>
                                        </MenuFlyoutItem>
                                    </MenuFlyout>
                                </StackPanel.ContextFlyout>
                                <TextBlock Text="{Binding Name}" />
                                <SelectorBarItem
                                    Padding="0"
                                    Icon="{mui:FontIcon Glyph='&#xEC92;'}"
                                    Text="{Binding CreateDate}" />
                                <TextBlock Text="{Binding Description}" />
                            </StackPanel>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
                <ListView Grid.Column="1" ItemsSource="{Binding ViewModel.SelectedRepository.SelectedGame.Localizations, Mode=OneWay}">
                    <ListView.Header>
                        <StackPanel
                            Margin="16,0"
                            Orientation="Horizontal"
                            Spacing="8">
                            <TextBlock x:Uid="Manage_Localization" VerticalAlignment="Center" />
                            <Button
                                x:Name="add_localization_folder_button"
                                x:Uid="Manage_Localization_Add"
                                Click="add_localization_folder_button_Click"
                                Content="{mui:FontIcon FontSize=16,
                                                       Glyph=&#xE8F4;}"
                                IsEnabled="{Binding ViewModel.SelectedRepository.SelectedGame.IsValid, Mode=OneWay}" />
                        </StackPanel>
                    </ListView.Header>
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="vm:LocalizationInfo">
                            <StackPanel Style="{StaticResource ListViewStackItemStyle}">
                                <StackPanel.ContextFlyout>
                                    <MenuFlyout>
                                        <MenuFlyoutItem
                                            x:Name="edit_localization_menuflyoutitem"
                                            x:Uid="Commom_MenuItem_Edit"
                                            Click="edit_localization_menuflyoutitem_Click" />
                                        <MenuFlyoutItem x:Uid="Commom_MenuItem_Open_Folder" Command="{Binding OpenJsonFolderCommand}" />
                                        <MenuFlyoutSeparator />
                                        <MenuFlyoutItem
                                            x:Name="delete_localization_menuflyoutitem"
                                            x:Uid="Commom_MenuItem_Delete"
                                            Click="delete_localization_menuflyoutitem_Click">
                                            <MenuFlyoutItem.Resources>
                                                <StaticResource x:Key="MenuFlyoutItemForeground" ResourceKey="SystemFillColorCriticalBrush" />
                                                <StaticResource x:Key="MenuFlyoutItemForegroundPointerOver" ResourceKey="SystemFillColorCriticalBrush" />
                                                <StaticResource x:Key="MenuFlyoutItemForegroundPressed" ResourceKey="SystemFillColorCriticalBrush" />
                                            </MenuFlyoutItem.Resources>
                                        </MenuFlyoutItem>
                                    </MenuFlyout>
                                </StackPanel.ContextFlyout>
                                <TextBlock Text="{Binding Name}" />
                                <SelectorBarItem
                                    Padding="0"
                                    Icon="{mui:FontIcon Glyph='&#xEC92;'}"
                                    Text="{Binding CreateDate}" />
                                <TextBlock Text="{Binding Description}" />
                            </StackPanel>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
                <ListView Grid.Column="2" ItemsSource="{Binding ViewModel.SelectedRepository.SelectedGame.Targets, Mode=OneWay}">
                    <ListView.Header>
                        <StackPanel
                            Margin="16,0"
                            Orientation="Horizontal"
                            Spacing="8">
                            <TextBlock x:Uid="Manage_Target" VerticalAlignment="Center" />
                            <Button
                                x:Name="add_target_button"
                                Click="add_target_button_Click"
                                Content="{mui:FontIcon FontSize=16,
                                                       Glyph=&#xE948;}"
                                IsEnabled="{Binding ViewModel.SelectedRepository.SelectedGame.IsValid, Mode=OneWay}" />
                            <Button
                                x:Name="add_target_folder_button"
                                x:Uid="Manage_Target_Add"
                                Click="add_target_folder_button_Click"
                                Content="{mui:FontIcon FontSize=16,
                                                       Glyph=&#xE8F4;}"
                                IsEnabled="{Binding ViewModel.SelectedRepository.SelectedGame.IsValid, Mode=OneWay}" />
                        </StackPanel>
                    </ListView.Header>
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="vm:TargetInfo">
                            <UserControl>
                                <StackPanel Style="{StaticResource ListViewStackItemStyle}">
                                    <StackPanel.ContextFlyout>
                                        <MenuFlyout>
                                            <MenuFlyoutItem
                                                x:Name="edit_target_menuflyoutitem"
                                                x:Uid="Commom_MenuItem_Edit"
                                                Click="edit_target_menuflyoutitem_Click" />
                                            <MenuFlyoutItem x:Uid="Commom_MenuItem_Open_Folder" Command="{Binding OpenJsonFolderCommand}" />
                                            <MenuFlyoutItem
                                                x:Name="export_target_menuflyoutitem"
                                                x:Uid="Commom_MenuItem_Export_As_Source"
                                                Click="export_target_menuflyoutitem_Click" />
                                            <MenuFlyoutSeparator />
                                            <MenuFlyoutItem
                                                x:Name="archive_target_menuflyoutitem"
                                                x:Uid="Commom_MenuItem_Archive"
                                                Click="archive_target_menuflyoutitem_Click" />
                                            <MenuFlyoutItem
                                                x:Name="dearchive_target_menuflyoutitem"
                                                x:Uid="Commom_MenuItem_DeArchive"
                                                Click="dearchive_target_menuflyoutitem_Click"
                                                IsEnabled="{Binding IsArchive}" />
                                            <MenuFlyoutItem
                                                x:Name="delete_target_folder_only_menuflyoutitem"
                                                x:Uid="Commom_MenuItem_Delete_Folder_Only"
                                                Click="delete_target_folder_only_menuflyoutitem_Click"
                                                IsEnabled="{Binding IsArchive}" />
                                            <MenuFlyoutSeparator />
                                            <MenuFlyoutItem
                                                x:Name="delete_target_menuflyoutitem"
                                                x:Uid="Commom_MenuItem_Delete"
                                                Click="delete_target_menuflyoutitem_Click">
                                                <MenuFlyoutItem.Resources>
                                                    <StaticResource x:Key="MenuFlyoutItemForeground" ResourceKey="SystemFillColorCriticalBrush" />
                                                    <StaticResource x:Key="MenuFlyoutItemForegroundPointerOver" ResourceKey="SystemFillColorCriticalBrush" />
                                                    <StaticResource x:Key="MenuFlyoutItemForegroundPressed" ResourceKey="SystemFillColorCriticalBrush" />
                                                </MenuFlyoutItem.Resources>
                                            </MenuFlyoutItem>
                                        </MenuFlyout>
                                    </StackPanel.ContextFlyout>
                                    <SelectorBarItem Padding="0" Text="{Binding Name}">
                                        <SelectorBarItem.Icon>
                                            <FontIcon x:Name="target_fonticon" Glyph="&#xE736;" />
                                        </SelectorBarItem.Icon>
                                    </SelectorBarItem>
                                    <SelectorBarItem
                                        Padding="0"
                                        Icon="{mui:FontIcon Glyph='&#xEC92;'}"
                                        Text="{Binding CreateDate}" />
                                    <TextBlock Text="{Binding Description}" />
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup>
                                            <VisualState x:Name="ArchiveState">
                                                <VisualState.StateTriggers>
                                                    <mtriggers:IsEqualStateTrigger Value="{Binding IsArchive}" To="True" />
                                                </VisualState.StateTriggers>
                                                <VisualState.Setters>
                                                    <Setter Target="target_fonticon.Glyph" Value="&#xE82D;" />
                                                    <Setter Target="target_fonticon.Foreground" Value="{ThemeResource SystemFillColorSuccessBrush}" />
                                                </VisualState.Setters>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                </StackPanel>
                            </UserControl>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Grid>
        </Grid>
    </Grid>
</Page>
